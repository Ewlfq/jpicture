(function ($) {
    'use strict';
    
    var  imgCSS = { 
        'background-repeat': 'no-repeat',
        'background-size': 'contain'
    },
    
    findMatchingWidth = function (picList, width) {
        var minDiff = Infinity,
            retVal,
            retKey;
            
        for (var key in picList) {
            if (picList.hasOwnProperty(key)) {
                if (Math.abs(picList[key] - width) < minDiff){
                    minDiff = Math.abs(picList[key] - width);
                    retVal = picList[key];
                    retKey = key;
                }
            }
        }
        
        return { 
            width: retVal, 
            key: retKey
        };
    },
        
    fetchImg =  function (elem, url) {  
        var useImg = function (img, url) {
            img.attr('src', url);    
        }, 
        
        useDiv = function (img, url) {
            var height = img.height(),
                // We need this image obj to get the height
                loadImg = new Image(); 
                
            loadImg.onload = function() {
                imgCSS.backgroundImage = 'url(' + url + ')';
                
                if (height === 0) {
                    imgCSS.height = this.height;
                }
                
                img.css(imgCSS);
            }  
            loadImg.src = url;     
        };
        
        $.ajax({
            url: window.location.href,
          	cache: true,
   	 		processData : false,
		}).always(function () {
            if (elem.tagName === 'IMG') {
                useImg($(elem), url);
            } else {
                useDiv($(elem), url);    
            }
		});
    }; 
    
    $.fn.jp = function (picList) {
        if (Object.prototype.toString.call(picList) === '[object Object]') {
            this.each(function() {
                var elemWidth = $(this).width(),
                    picProperties = findMatchingWidth(picList, elemWidth);
                    
                fetchImg(this, picProperties.key);
            });
        } else {
            console.log('Object of type [object Object] expected, object of type ' + Object.prototype.toString.call(picList) + ' given.'); 
        }
        
        return this;
    };
}(jQuery));