(function ($) {
    'use strict';
    
    var findMatchingWidth = function (picList, width) {
        var minDiff = Infinity,
            retVal;
        for (var key in picList) {
           if (picList.hasOwnProperty(key)) {
               if (Math.abs(picList[key] - width) < minDiff){
                   minDiff = Math.abs(picList[key] - width);
                   retVal = picList[key];
               }
           }
        }
        return retVal;
    }
    
    $.fn.jp = function (picList) {
        if (Object.prototype.toString.call(picList) === '[object Object]') {
            this.each(function() {
                var elemWidth = $(this).width(),
                    picWidth = findMatchingWidth(picList, elemWidth);
                console.log('Element width = ' + elemWidth + ' optimal pic witdh = ' + picWidth);
            });
        } else {
            console.log('Object of type [object Object] expected, object of type ' + Object.prototype.toString.call(picList) + ' given.'); 
        }
        
        return this;
    };
}(jQuery));
